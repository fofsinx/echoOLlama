version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_chat_api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE_URL=https://api.openai.com/v1
      - OLLAMA_API_BASE_URL=http://ollama:11434/v1
      - GPT_MODEL=gpt-4-turbo-preview
      - OLLAMA_MODEL=llama2
      - LLM_TIMEOUT=60.0
      - LLM_MAX_RETRIES=3
      - TTS_ENGINE=openai
      - TTS_MODEL=tts-1
      - TTS_OPENAI_API_KEY=${OPENAI_API_KEY}
      - TTS_OPENAI_API_BASE_URL=https://api.openai.com/v1
      - SPEECH_CACHE_DIR=/app/cache/speech
      - WHISPER_MODEL_SIZE=base
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
    volumes:
      - ./app:/app
      - speech_cache:/app/cache/speech
    depends_on:
      - redis
      - ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  redis:
    image: redis:alpine
    container_name: ai_chat_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    container_name: ai_chat_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: ai_chat_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: ai_chat_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    depends_on:
      - prometheus

volumes:
  redis_data:
  ollama_models:
  speech_cache:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: ai_chat_network
    driver: bridge